{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 1. There is an endpoint for token refresh.\
2. Storing access token in a httpOnly cookie and refresh token in local storage.\
3. For each request, the access token must be present, if it is invalid, we send back a 401, in frontend, the refresh token endpoint must be targeted with a valid refresh token. On server, we check for refresh token. If refresh token is invalid, we pass the request and user is not set on req.user. But, if refresh token is valid, we generate a new access token and set it on cookie.\
4. Now that we have access token on cookie, from frontend another request to the resource can be made.}