1. There is an endpoint for token refresh.
2. Storing access token in a httpOnly cookie and refresh token in local storage.
3. For each request, the access token must be present, if it is invalid, we send back a 401. In frontend, axios must intercept the response and incase of 401, it should send a request to refresh token API with refresh token inside the headers. If the refresh token is valid, server will set a new access token on the request and return a 200. Axios should make that 401 request again. Incase of failures, 400 will be sent with message that refresh token is expired. Status code is questionable though but we need to distinguish these two responses somehow.
4. On server, auth middleware checks for access token. If access token is invalid, we pass the request and user is not set on req.user. And whatever APIs require authentication will fail, thanks to requireAuth middleware.